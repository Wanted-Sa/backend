name: Green-CD

on:
  push:
    branches: [ "release-green" ]

jobs:
  django-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --no-root

    - name: Run Tests
      env:
        SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DEBUG: ${{ secrets.DJANGO_DEBUG }}
        MYSQL_DB: ${{ secrets.MYSQL_DB }}
      run: |
        poetry run python manage.py test
  
  docker-build:
    needs: django-test
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v4
      with:
        file: ./docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_GREEN_REPO }}
        labels: latest
   
  ec2-deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.AWS_EC2_NAME }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            sh deploy.sh